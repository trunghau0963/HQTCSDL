GO
CREATE OR ALTER TRIGGER ADD_THUOC_IN_TOATHUOC
ON TOATHUOC
FOR INSERT
AS
BEGIN
    DECLARE @MALO CHAR(12)
    DECLARE @MATHUOC CHAR(10)
    DECLARE @SOLUONG INT
    DECLARE CURSOR_P CURSOR FOR SELECT MALO, MATHUOC, SOLUONG FROM INSERTED
    
    OPEN CURSOR_P

    FETCH NEXT FROM CURSOR_P INTO @MALO, @MATHUOC, @SOLUONG
    WHILE @@FETCH_STATUS = 0
    BEGIN
        IF NOT EXISTS(SELECT * FROM THUOC T WHERE @MATHUOC = T.MATHUOC AND @MALO = T.MALO AND T.SOLUONG >= @SOLUONG)
        BEGIN 
            ROLLBACK
            CLOSE CURSOR_P
            DEALLOCATE CURSOR_P
            RAISERROR(N'KHÔNG ĐỦ THUỐC', 16, 1)
        END

        UPDATE THUOC
        SET THUOC.SOLUONG = THUOC.SOLUONG - @SOLUONG
        WHERE THUOC.MALO = @MALO AND THUOC.MATHUOC = @MATHUOC

        FETCH NEXT FROM CURSOR_P INTO @MALO, @MATHUOC, @SOLUONG 
    END

    CLOSE CURSOR_P
    DEALLOCATE CURSOR_P
END;

--R35
GO
CREATE OR ALTER TRIGGER CANCEL_THUOC_IN_TOATHUOC
ON TOATHUOC
FOR DELETE
AS
BEGIN
    DECLARE @MALO CHAR(12)
    DECLARE @MATHUOC CHAR(10)
    DECLARE @SOLUONG INT
    DECLARE CURSOR_P CURSOR FOR SELECT MALO, MATHUOC, SOLUONG FROM deleted
    
    OPEN CURSOR_P

    FETCH NEXT FROM CURSOR_P INTO @MALO, @MATHUOC, @SOLUONG
    WHILE @@FETCH_STATUS = 0
    BEGIN
        UPDATE THUOC
        SET THUOC.SOLUONG = THUOC.SOLUONG + @SOLUONG
        WHERE THUOC.MALO = @MALO AND THUOC.MATHUOC = @MATHUOC

        FETCH NEXT FROM CURSOR_P INTO @MALO, @MATHUOC, @SOLUONG 
    END

    CLOSE CURSOR_P
    DEALLOCATE CURSOR_P
END;


GO
CREATE OR ALTER TRIGGER CHANGE_THUOC_IN_TOATHUOC
ON TOATHUOC
FOR UPDATE
AS
BEGIN
    DECLARE @MALO_NEW CHAR(12)
    DECLARE @MATHUOC_NEW CHAR(10)
    DECLARE @SOLUONG_NEW INT

    DECLARE @MALO_OLD CHAR(12)
    DECLARE @MATHUOC_OLD CHAR(10)
    DECLARE @SOLUONG_OLD INT
    
    DECLARE CURSOR_NEW CURSOR FOR SELECT MALO, MATHUOC, SOLUONG FROM INSERTED
    DECLARE CURSOR_OLD CURSOR FOR SELECT MALO, MATHUOC, SOLUONG FROM deleted
    
    OPEN CURSOR_NEW
    OPEN CURSOR_OLD

    FETCH NEXT FROM CURSOR_NEW INTO @MALO_NEW, @MATHUOC_NEW, @SOLUONG_NEW
    FETCH NEXT FROM CURSOR_OLD INTO @MALO_OLD, @MATHUOC_OLD, @SOLUONG_OLD

    WHILE @@FETCH_STATUS = 0
    BEGIN
        UPDATE THUOC
        SET THUOC.SOLUONG = THUOC.SOLUONG + @SOLUONG_OLD
        WHERE THUOC.MALO = @MALO_OLD AND THUOC.MATHUOC = @MATHUOC_OLD

        IF NOT EXISTS(SELECT * FROM THUOC T WHERE @MATHUOC_NEW = T.MATHUOC AND @MALO_NEW = T.MALO AND T.SOLUONG >= @SOLUONG_NEW)
        BEGIN 
            DECLARE @MSG NVARCHAR(100)
            SELECT DISTINCT @MSG = TENTHUOC FROM THUOC T WHERE @MATHUOC_NEW = T.MATHUOC AND @MALO_NEW = T.MALO AND T.SOLUONG >= @SOLUONG_NEW
            SET @MSG = N'KHÔNG ĐỦ ' + @MSG

            ROLLBACK

            CLOSE CURSOR_NEW
            CLOSE CURSOR_OLD
            DEALLOCATE CURSOR_NEW
            DEALLOCATE CURSOR_OLD
            
            RAISERROR(@MSG, 16, 1)
            RETURN
        END

        UPDATE THUOC
        SET THUOC.SOLUONG = THUOC.SOLUONG - @SOLUONG_NEW
        WHERE THUOC.MALO = @MALO_NEW AND THUOC.MATHUOC = @MATHUOC_NEW

        FETCH NEXT FROM CURSOR_NEW INTO @MALO_NEW, @MATHUOC_NEW, @SOLUONG_NEW
        FETCH NEXT FROM CURSOR_OLD INTO @MALO_OLD, @MATHUOC_OLD, @SOLUONG_OLD
    END

    CLOSE CURSOR_NEW
    CLOSE CURSOR_OLD
    DEALLOCATE CURSOR_NEW
    DEALLOCATE CURSOR_OLD
END;

--R36
GO
CREATE OR ALTER TRIGGER TONGTIEN_CHITIETPHIENKHAM_TOATHUOC
ON TOATHUOC
FOR INSERT, UPDATE, DELETE
AS
BEGIN 
    UPDATE CHITIETPHIENKHAM
    SET CHITIETPHIENKHAM.TONGTIEN = COALESCE((
        SELECT SUM(THANHTIEN)
        FROM TOATHUOC TT
        WHERE CHITIETPHIENKHAM.MACT = TT.MACT
    ), 0)
    +
    COALESCE((
        SELECT SUM(THANHTIEN)
        FROM DICHVUCHIDINH DV
        WHERE CHITIETPHIENKHAM.MACT = DV.MACT
    ), 0)
    FROM CHITIETPHIENKHAM
    INNER JOIN (inserted i LEFT JOIN deleted d ON i.MACT = d.MACT) ON CHITIETPHIENKHAM.MACT = i.MACT;
END;

GO
CREATE OR ALTER TRIGGER TONGTIEN_CHITIETPHIENKHAM_DICHVUCHIDINH
ON DICHVUCHIDINH
FOR INSERT, UPDATE, DELETE
AS
BEGIN 
    UPDATE CHITIETPHIENKHAM
    SET CHITIETPHIENKHAM.TONGTIEN = COALESCE((
        SELECT SUM(THANHTIEN)
        FROM TOATHUOC TT
        WHERE CHITIETPHIENKHAM.MACT = TT.MACT
    ), 0)
    +
    COALESCE((
        SELECT SUM(THANHTIEN)
        FROM DICHVUCHIDINH DV
        WHERE CHITIETPHIENKHAM.MACT = DV.MACT
    ), 0)
    FROM CHITIETPHIENKHAM
    INNER JOIN (inserted i LEFT JOIN deleted d ON i.MACT = d.MACT) ON CHITIETPHIENKHAM.MACT = i.MACT;
END;

GO
--R37
CREATE OR ALTER TRIGGER TOATHUOC_THANHTIEN
ON TOATHUOC
AFTER INSERT, UPDATE
AS
BEGIN
    UPDATE TOATHUOC
    SET TOATHUOC.THANHTIEN = TOATHUOC.SOLUONG * THUOC.DONGIA
    FROM TOATHUOC
        JOIN INSERTED I ON TOATHUOC.MATHUOC = I.MATHUOC AND I.MALO = TOATHUOC.MALO
        JOIN THUOC ON THUOC.MATHUOC = TOATHUOC.MATHUOC AND THUOC.MALO = TOATHUOC.MALO
END;

--R38
GO
CREATE OR ALTER TRIGGER INSERT_LICHLAMVIEC
ON LICHLAMVIEC
FOR INSERT, UPDATE
AS
BEGIN
    DECLARE @MANS CHAR(16);  -- Mã nha sĩ
    DECLARE @NGAYKHAM DATE;  -- Ngày lịch hẹn

    DECLARE CURSOR_P CURSOR FOR SELECT MANS, NGAYKHAM FROM inserted

    OPEN CURSOR_P

    FETCH NEXT FROM CURSOR_P INTO @MANS, @NGAYKHAM
    WHILE @@FETCH_STATUS = 0
    BEGIN
        IF(SELECT COUNT(*) FROM LICHLAMVIEC WHERE MANS = @MANS AND NGAYKHAM = @NGAYKHAM) > 5
        BEGIN
            DECLARE @ErrorMessage NVARCHAR(100);
            SET @ErrorMessage = @MANS + N' CÓ HƠN 5 LỊCH HẸN TRONG NGAY ' + CONVERT(NVARCHAR, @NGAYKHAM, 103);
            ROLLBACK
            RAISERROR(@ErrorMessage, 16, 1)
        END
        FETCH NEXT FROM CURSOR_P INTO @MANS, @NGAYKHAM
    END

    CLOSE CURSOR_P
    DEALLOCATE CURSOR_P
END;


--R39
GO
CREATE OR ALTER TRIGGER INSERT_LICHKHAM
ON LICHKHAM
FOR INSERT, UPDATE
AS
BEGIN
    DECLARE @MABN CHAR(16);  -- Mã BỆNH NHÂN
    DECLARE @NGAYKHAM DATE;  -- Ngày lịch hẹn

    DECLARE CURSOR_P CURSOR FOR SELECT MABN, NGAYKHAM FROM inserted

    OPEN CURSOR_P

    FETCH NEXT FROM CURSOR_P INTO @MABN, @NGAYKHAM
    WHILE @@FETCH_STATUS = 0

    BEGIN
        IF(SELECT COUNT(*) FROM LICHKHAM WHERE MABN = @MABN AND NGAYKHAM = @NGAYKHAM) > 1
        BEGIN
            DECLARE @ErrorMessage NVARCHAR(100);
            SET @ErrorMessage = @MABN + N' CÓ HƠN 1 LỊCH HẸN TRONG NGAY ' + CONVERT(NVARCHAR, @NGAYKHAM, 103);
            ROLLBACK
            RAISERROR(@ErrorMessage, 16, 1)
        END
        FETCH NEXT FROM CURSOR_P INTO @MABN, @NGAYKHAM
    END

    CLOSE CURSOR_P
    DEALLOCATE CURSOR_P
END;

--R40
GO
ALTER TABLE LICHLAMVIEC ADD CHECK((datepart(hour, GIOKHAM) >= 7 and datepart(hour, GIOKHAM) < 11) or (datepart(hour, GIOKHAM) >= 13 and datepart(hour, GIOKHAM) < 17));

--R41
ALTER TABLE BENHNHAN ADD CHECK (LEN(MATKHAU) >= 6)
ALTER TABLE NHASI ADD CHECK (LEN(MATKHAU) >= 6)
ALTER TABLE NHANVIEN ADD CHECK (LEN(MATKHAU) >= 6)
ALTER TABLE QUANTRI ADD CHECK (LEN(MATKHAU) >= 6)


GO
CREATE OR ALTER TRIGGER DICHVUCHIDINH_THANHTIEN
ON DICHVUCHIDINH
FOR INSERT
AS
BEGIN
    DECLARE @GIA INT
    DECLARE @MADV CHAR(9)
    
    DECLARE CURSOR_p CURSOR FOR
    SELECT MADV
    FROM inserted

    OPEN CURSOR_p
    FETCH NEXT FROM CURSOR_p INTO @MADV
    
    WHILE @@FETCH_STATUS = 0
    BEGIN
        SELECT @GIA = DONGIA FROM DICHVU WHERE @MADV = MADV
        
        UPDATE DICHVUCHIDINH
        SET THANHTIEN = @GIA
        WHERE MADV = @MADV

        FETCH NEXT FROM CURSOR_p INTO @MADV 
    END

    CLOSE CURSOR_p
    DEALLOCATE CURSOR_p
END;